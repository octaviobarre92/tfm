{"version":3,"file":"static/js/363.e3aabbb7.chunk.js","mappings":"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","sources":["views/teachers/_components/FormTeacher.js","views/teachers/_components/ModalUpdateTeacher.js","views/teachers/_components/ModalAssignments.js","views/teachers/_components/ListTeachers.js","views/teachers/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button, Checkbox, Form, Input, notification, Row } from \"antd\";\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 4, span: 16 },\r\n};\r\nconst FormTeachers = ({ item, submitTeacher, setFormSubmitRef }) => {\r\n    const formRef = useRef(null);\r\n    const [componentSize, setComponentSize] = useState('small');\r\n    const [indexImgSecurity, setIndexImgSecurity] = useState(null);\r\n    const [editPassword, setEditPassword] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIndexImgSecurity(item?.imgSecurity)\r\n\r\n        setFormSubmitRef && setFormSubmitRef(formRef);\r\n    }, [item, formRef])\r\n\r\n    const onFormLayoutChange = ({ size }) => {\r\n        setComponentSize(size);\r\n    };\r\n\r\n    const onSubmit = values => {\r\n        const { id } = item ?? {}\r\n\r\n        if (indexImgSecurity === null) {\r\n            notification.open({\r\n                message: 'Error!',\r\n                description: 'Seleccione una imagen de seguridad para el inicio de sesión',\r\n                icon: <CloseCircleOutlined style={{ color: 'red' }} />,\r\n            });\r\n            return\r\n        }\r\n\r\n        submitTeacher({ ...values, id, imgSecurity: indexImgSecurity });\r\n\r\n        formRef.current?.resetFields();\r\n        setIndexImgSecurity(null);\r\n\r\n        notification.open({\r\n            message: 'Exitoso!',\r\n            description: 'Estudiante actualizado correctamente, puedes visualizarlo en el apartado de Listado',\r\n            icon: <CheckCircleOutlined style={{ color: '#108ee9' }} />,\r\n        });\r\n    };\r\n\r\n    const selectToImgSecurity = (indexImgSecurity) => {\r\n        setIndexImgSecurity(indexImgSecurity);\r\n    }\r\n\r\n    const changeStateEditPassword = () => {\r\n        formRef.current.setFieldValue('password', \"\")\r\n        setEditPassword(!editPassword)\r\n    }\r\n\r\n    return (<>\r\n        <Form\r\n            ref={formRef}\r\n            labelCol={{ span: 4 }}\r\n            wrapperCol={{ span: 14 }}\r\n            layout=\"horizontal\"\r\n            initialValues={{ ...item, size: componentSize }}\r\n            onValuesChange={onFormLayoutChange}\r\n            size={componentSize}\r\n            onFinish={onSubmit}\r\n        >\r\n            <Form.Item\r\n                rules={[{\r\n                    required: true, message: 'Por favor ingrese un número de cédula',\r\n                }, {\r\n                    message: 'Por favor ingrese un número de cédula válido', pattern: new RegExp('^[0-9]*$')\r\n                }]}\r\n                name=\"cedula\"\r\n                label=\"Cedula\">\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                rules={[{\r\n                    required: true, message: 'Por favor ingrese el primer nombre del profesor',\r\n                }]}\r\n                name=\"primer_nombre\"\r\n                label=\"Primer Nombre\">\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                rules={[{\r\n                    required: true, message: 'Por favor ingrese el segundo nombre del profesor',\r\n                }]}\r\n                name=\"segundo_nombre\"\r\n                label=\"Segundo Nombre\">\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                rules={[{\r\n                    required: true, message: 'Por favor ingrese el primer apellido del profesor',\r\n                }]}\r\n                name=\"primer_apellido\"\r\n                label=\"Primer Apellido\">\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                rules={[{\r\n                    required: true, message: 'Por favor ingrese el segundo apellido del profesor',\r\n                }]}\r\n                name=\"segundo_apellido\"\r\n                label=\"Segundo Apellido\">\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                rules={[{\r\n                    required: true, message: 'Por favor ingrese el correo electrónico del representante',\r\n                }, {\r\n                    type: 'email', message: 'Ingrese un correo electrónico valido!'\r\n                }]}\r\n                name=\"correo\"\r\n                label=\"Correo\">\r\n                <Input />\r\n            </Form.Item>\r\n\r\n\r\n            {item && <Form.Item\r\n                rules={[{\r\n                    required: true, message: 'Por favor ingrese el segundo apellido del profesor',\r\n                }]}\r\n                name=\"intentosImagen\"\r\n                label=\"Intentos\">\r\n                <Input />\r\n            </Form.Item>}\r\n            <Form.Item\r\n                rules={[{\r\n                    required: editPassword, message: 'Por favor ingrese una contraseña.',\r\n                }]}\r\n                name=\"password\"\r\n                label=\"Contraseña\">\r\n                <Input.Password disabled={!editPassword} />\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout} ><Checkbox onClick={() => {\r\n                changeStateEditPassword()\r\n            }}>Cambiar contraseña?</Checkbox>\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item>\r\n                <Row>\r\n                    <div onClick={() => {\r\n                        selectToImgSecurity(0)\r\n                    }}\r\n                        className={`container_image_security ${indexImgSecurity === 0 ? 'img-security-selected' : ''}`}>\r\n                        <img width={50} height={\"auto\"}\r\n                            src=\"https://static.vecteezy.com/system/resources/previews/013/452/430/original/illustration-of-tree-free-png.png\"\r\n                            alt='image_security_arbol' />\r\n                    </div>\r\n                    <div onClick={() => {\r\n                        selectToImgSecurity(1)\r\n                    }}\r\n                        className={`container_image_security ${indexImgSecurity === 1 ? 'img-security-selected' : ''}`}>\r\n                        <img width={50} height={\"auto\"}\r\n                            src=\"https://i.pinimg.com/originals/06/49/66/06496628fa77e5980783eba02524204f.png\"\r\n                            alt='image_security_bus' />\r\n                    </div>\r\n                    <div onClick={() => {\r\n                        selectToImgSecurity(2)\r\n                    }}\r\n                        className={`container_image_security ${indexImgSecurity === 2 ? 'img-security-selected' : ''}`}>\r\n                        <img width={50} height={\"auto\"}\r\n                            src=\"https://images.vexels.me/media/users/3/140072/isolated/preview/02bac95a04a65600a095ae5948d87756-dog-cartoon.png\"\r\n                            alt='image_security_perro' />\r\n                    </div>\r\n                    <div onClick={() => {\r\n                        selectToImgSecurity(3)\r\n                    }}\r\n                        className={`container_image_security ${indexImgSecurity === 3 ? 'img-security-selected' : ''}`}>\r\n                        <img width={50} height={\"auto\"}\r\n                            src=\"https://images.vexels.com/media/users/3/182678/isolated/preview/7ea4faa0bcd9705ce266e7769d01318d-barco-dibujado-a-mano.png\"\r\n                            alt='image_security_barco' />\r\n                    </div>\r\n                    <div onClick={() => {\r\n                        selectToImgSecurity(4)\r\n                    }}\r\n                        className={`container_image_security ${indexImgSecurity === 4 ? 'img-security-selected' : ''}`}>\r\n                        <img width={50} height={\"auto\"}\r\n                            src=\"https://static.vecteezy.com/system/resources/previews/011/651/357/original/doodle-freehand-sketch-drawing-of-flower-free-png.png\"\r\n                            alt='image_security_rosa' />\r\n                    </div>\r\n                    <div onClick={() => {\r\n                        selectToImgSecurity(5)\r\n                    }}\r\n                        className={`container_image_security ${indexImgSecurity === 5 ? 'img-security-selected' : ''}`}>\r\n                        <img width={50} height={\"auto\"} src=\"https://cdn-icons-png.freepik.com/512/2038/2038263.png\"\r\n                            alt='image_security_edificio' />\r\n                    </div>\r\n                </Row>\r\n            </Form.Item>\r\n            {\r\n                !item && <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Guardar profesor\r\n                    </Button>\r\n                </Form.Item>\r\n            }\r\n        </Form>\r\n    </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({})\r\nconst mapDispatchToProps = (dispatch) => ({});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormTeachers)\r\n","import {Card, Modal} from 'antd';\r\nimport React, {useEffect, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport FormTeachers from \"./FormTeacher\";\r\nimport {actions as actionTeachers} from \"../../../store/reducers/teachers\";\r\n\r\n\r\nconst ModalUpdateTeacher = ({updateTeacher, item, setItem, showModal, setShowModal}) => {\r\n    const [formSubmitRef, setFormSubmitRef] = useState(null);\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title=\"Actualizacion de profesor\"\r\n                open={showModal}\r\n                width=\"60%\"\r\n                okText=\"Actualizar\"\r\n                onOk={() => {\r\n                    formSubmitRef.current.submit()\r\n                }}\r\n                onCancel={() => {\r\n                    setItem(null);\r\n                    setShowModal(false)\r\n                }}\r\n                cancelText=\"Cancelar\"\r\n            >\r\n                <Card loading={!item}>\r\n                    <FormTeachers submitTeacher={updateTeacher} item={item} setFormSubmitRef={setFormSubmitRef}/>\r\n                </Card>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({})\r\nconst mapDispatchToProps = (dispatch, {setItem, setShowModal}) => ({\r\n    updateTeacher: (teacher) => {\r\n        dispatch(actionTeachers.updateTeacher(teacher))\r\n        setItem(null);\r\n        setShowModal(false)\r\n    }\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUpdateTeacher)\r\n","import React, {useEffect, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {actions as actionsAssignment, selectors as selectorAssignment} from \"store/reducers/assignments\"\r\nimport {Alert, Button, Card, Modal, Popconfirm, Select, Table} from \"antd\";\r\nimport {motion} from \"framer-motion\";\r\n\r\nconst ModalAssignments = ({\r\n                              getCoursesWithAssignments,\r\n                              dataCourseWithAssignments,\r\n                              isFetching,\r\n                              showModalAssigment,\r\n                              setShowModalAssigment,\r\n                              getAllSubjects,\r\n                              getSelectedSubjects,\r\n                              dataSelectedSubjects,\r\n                              dataAllSubjects,\r\n                              isFetchingSubjects,\r\n                              saveAssignmentSubject,\r\n                              deleteAssignmentSubject,\r\n                              saveAssignmentCourse,\r\n                              deleteAssignmentCourse,\r\n                              saveTeacherSelectedAssignment,\r\n                              teacherSelectedAssignment,\r\n                              saveCourseSelectedAssignment,\r\n                              courseSelectedAssignment\r\n                          }) => {\r\n    const [alertConfirm, setAlertConfirm] = useState({showMessage: false, message: null, type: null})\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Curso',\r\n            dataIndex: 'course',\r\n            key: 'course'\r\n        },\r\n        {\r\n            title: 'Paralelo',\r\n            dataIndex: 'parallel',\r\n            key: 'parallel',\r\n        },\r\n        {\r\n            title: 'Estado',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (text, record) => (\r\n                <>\r\n                    {!record.idAssignment && <span\r\n                        onClick={() => {\r\n                            assignmentCourse(teacherSelectedAssignment.id, record.id)\r\n                        }}\r\n                        className='badge-success'>Asignar</span>}\r\n                    {record.idAssignment && <Popconfirm\r\n                        placement=\"left\"\r\n                        title=\"Desea eliminar esta asignación?\"\r\n                        description=\"Al eliminar esta asignacion, las materias relacionadas a este profesor para este curso van a ser borradas.\"\r\n                        onConfirm={() => confirmDeleteAssignment(record.idAssignment)}\r\n                        okText=\"Aceptar\"\r\n                        cancelText=\"Cancelar\"\r\n                    >\r\n                        <span className='badge-danger'>Quitar</span>\r\n                    </Popconfirm>}\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Button disabled={!record.idAssignment} onClick={() => {\r\n                    selectingCourse(record)\r\n                }}>Asignar materias</Button>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (teacherSelectedAssignment?.id) {\r\n            getCoursesWithAssignments(teacherSelectedAssignment.id);\r\n            getAllSubjects();\r\n        }\r\n\r\n        if (alertConfirm.showMessage) {\r\n            const timer = setTimeout(() => hideAuthMessage(), 3000)\r\n            return () => {\r\n                clearTimeout(timer);\r\n            };\r\n        }\r\n    }, []);\r\n    const handleSelectedSubjects = (currentSubject) => {\r\n        const subjectId = dataAllSubjects.find(({value}) => value === currentSubject).id\r\n        saveAssignmentSubject(subjectId, courseSelectedAssignment.idAssignment)\r\n\r\n        setAlertConfirm({showMessage: true, message: \"Materia asignada\", type: 'success'})\r\n    }\r\n    const handleDeselectedSubjects = (currentSubject) => {\r\n        const subjectId = dataAllSubjects.find(({value}) => value === currentSubject).id\r\n        deleteAssignmentSubject(subjectId, courseSelectedAssignment.idAssignment)\r\n\r\n        setAlertConfirm({showMessage: true, message: \"Materia removida\", type: 'success'})\r\n    }\r\n\r\n    const hideModal = () => {\r\n        saveTeacherSelectedAssignment(null);\r\n        saveCourseSelectedAssignment(null);\r\n        setShowModalAssigment(false)\r\n    }\r\n\r\n    const selectingCourse = (course) => {\r\n        saveCourseSelectedAssignment(course)\r\n        getSelectedSubjects(teacherSelectedAssignment.id, course.id)\r\n    }\r\n\r\n    const hideAuthMessage = () => {\r\n        setAlertConfirm({showMessage: false, message: null, type: null})\r\n    }\r\n\r\n    const assignmentCourse = (userId, courseId) => {\r\n        saveAssignmentCourse(userId, courseId)\r\n    }\r\n\r\n    const confirmDeleteAssignment = (idAssignment) => {\r\n        if (idAssignment === courseSelectedAssignment.idAssignment) {\r\n            saveCourseSelectedAssignment(null)\r\n        }\r\n        deleteAssignmentCourse(idAssignment)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Asignaciones de cursos y asignaturas\"\r\n            open={showModalAssigment}\r\n            width=\"75%\"\r\n            onOk={() => {\r\n                hideModal()\r\n            }}\r\n            onCancel={() => {\r\n                hideModal()\r\n            }}\r\n        >\r\n            {alertConfirm.showMessage && <motion.div\r\n                initial={{opacity: 0, marginBottom: 0}}\r\n                animate={{\r\n                    opacity: alertConfirm.showMessage ? 1 : 0,\r\n                    marginBottom: alertConfirm.showMessage ? 20 : 0\r\n                }}>\r\n                <Alert type={alertConfirm.type} showIcon message={alertConfirm.message}></Alert>\r\n            </motion.div>}\r\n            <div className=\"container-assignments\">\r\n                <Card loading={isFetching}>\r\n                    <Table columns={columns} dataSource={dataCourseWithAssignments}/>\r\n                </Card>\r\n                {\r\n                    courseSelectedAssignment && <Card className=\"h-100\">\r\n                        <div className=\"layout-subjects\">\r\n                            <b className=\"title-subject\">Asignaturas asignadas\r\n                                | {courseSelectedAssignment.course} {courseSelectedAssignment.parallel}</b>\r\n                            <Select\r\n                                loading={isFetchingSubjects}\r\n                                mode=\"multiple\"\r\n                                size=\"large\"\r\n                                placeholder=\"Seleccione las asignaturas\"\r\n                                value={dataSelectedSubjects}\r\n                                onSelect={handleSelectedSubjects}\r\n                                onDeselect={handleDeselectedSubjects}\r\n                                style={{\r\n                                    width: '100%',\r\n                                }}\r\n                                options={dataAllSubjects}\r\n                            />\r\n                        </div>\r\n                    </Card>\r\n                }\r\n                {!courseSelectedAssignment && <b>Seleccione un curso para asignar materias al profesor.</b>}\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dataCourseWithAssignments: selectorAssignment.loadAllCoursesWithAssignments(state),\r\n    dataAllSubjects: selectorAssignment.loadAllSubjects(state),\r\n    dataSelectedSubjects: selectorAssignment.loadSelectedSubjects(state),\r\n    teacherSelectedAssignment: selectorAssignment.teacherSelectedAssignment(state),\r\n    courseSelectedAssignment: selectorAssignment.courseSelectedAssignment(state),\r\n    isFetching: selectorAssignment.getFetching(state),\r\n    isFetchingSubjects: selectorAssignment.getFetchingSubjects(state)\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getCoursesWithAssignments: (userId) => {\r\n        dispatch(actionsAssignment.loadAllCoursesWithAssignments(userId));\r\n    },\r\n    getAllSubjects: () => {\r\n        dispatch(actionsAssignment.loadAllSubjects());\r\n    },\r\n    getSelectedSubjects: (userId, courseId) => {\r\n        dispatch(actionsAssignment.loadSelectedSubjects(userId, courseId));\r\n    },\r\n    saveAssignmentSubject: (subjectId, idAssignment) => {\r\n        dispatch(actionsAssignment.saveAssignmentSubject(subjectId, idAssignment));\r\n    },\r\n    saveAssignmentCourse: (userId, courseId) => {\r\n        dispatch(actionsAssignment.saveAssignmentCourse(userId, courseId));\r\n    },\r\n    deleteAssignmentSubject: (subjectId, courseId) => {\r\n        dispatch(actionsAssignment.deleteAssignmentSubject(subjectId, courseId));\r\n    },\r\n    deleteAssignmentCourse: (idAssignment) => {\r\n        dispatch(actionsAssignment.deleteAssignmentCourse(idAssignment));\r\n    },\r\n    saveTeacherSelectedAssignment: (teacher) => {\r\n        dispatch(actionsAssignment.saveTeacherSelectedAssignment(teacher));\r\n    },\r\n    saveCourseSelectedAssignment: (course) => {\r\n        dispatch(actionsAssignment.saveCourseSelectedAssignment(course));\r\n    },\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalAssignments)\r\n","import React, {useEffect, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {actions as actionsTeacher, selectors as selectorTeacher} from \"store/reducers/teachers\"\r\nimport {actions as actionsAssignment} from \"store/reducers/assignments\"\r\nimport {Card, Dropdown, Popconfirm, Table} from \"antd\";\r\nimport ModalUpdateTeacher from \"./ModalUpdateTeacher\";\r\nimport {MoreOutlined} from '@ant-design/icons';\r\nimport ModalAssignments from \"./ModalAssignments\";\r\n\r\nconst ListTeachers = ({dataTeacher, isFetching, getTeachers, deleteTeacher, saveTeacherSelectedAssignment}) => {\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [showModalAssigment, setShowModalAssigment] = useState(false)\r\n    const [item, setItem] = useState(null)\r\n    const [assignment, setAssignment] = useState(null)\r\n\r\n    const actionsMenuTeacher = (record) => ([\r\n        {\r\n            key: '1',\r\n            label: (\r\n                <span onClick={() => {\r\n                    loadTeacher(record)\r\n                }}>Editar</span>\r\n            ),\r\n        },\r\n        {\r\n            key: '2',\r\n            label: (\r\n                <span type=\"primary\" onClick={() => {\r\n                    loadTeacherAssignment(record)\r\n                }}>Asignaciones</span>\r\n            ),\r\n        },\r\n        {\r\n            key: '3',\r\n            danger: true,\r\n            label: (\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title=\"Desea cambiar el estado del profesor?\"\r\n                    description=\"Esto puede afectar a las operaciones que el profesor realice.\"\r\n                    onConfirm={() => confirmDeleteTeacher(record)}\r\n                    okText=\"Aceptar\"\r\n                    cancelText=\"Cancelar\"\r\n                >\r\n                    {record.estado ? 'Eliminar' : 'Restaurar'}\r\n                </Popconfirm>\r\n            ),\r\n        },\r\n    ])\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Cédula',\r\n            dataIndex: 'cedula',\r\n            key: 'cedula'\r\n        },\r\n        {\r\n            title: 'Primer Nombre',\r\n            dataIndex: 'primer_nombre',\r\n            key: 'primer_nombre',\r\n        },\r\n        {\r\n            title: 'Segundo Nombre',\r\n            dataIndex: 'segundo_nombre',\r\n            key: 'segundo_nombre',\r\n        },\r\n        {\r\n            title: 'Primer Apellido',\r\n            dataIndex: 'primer_apellido',\r\n            key: 'primer_apellido',\r\n        },\r\n        {\r\n            title: 'Segundo Apellido',\r\n            dataIndex: 'segundo_apellido',\r\n            key: 'segundo_apellido',\r\n        },\r\n        {\r\n            title: 'Correo',\r\n            dataIndex: 'correo',\r\n            key: 'correo',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Dropdown\r\n                    menu={{items: actionsMenuTeacher(record)}}\r\n                >\r\n                    <a onClick={(e) => e.preventDefault()}>\r\n                        <MoreOutlined/>\r\n                    </a>\r\n                </Dropdown>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        getTeachers();\r\n    }, [])\r\n\r\n    const confirmDeleteTeacher = ({id, estado}) => {\r\n        deleteTeacher({id, estado: Number(!estado)});\r\n    }\r\n\r\n    const loadTeacher = (teacher) => {\r\n        setItem(teacher);\r\n        setShowModal(true)\r\n    }\r\n    const loadTeacherAssignment = (teacher) => {\r\n        saveTeacherSelectedAssignment(teacher)\r\n        setAssignment(teacher);\r\n        setShowModalAssigment(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card loading={isFetching}>\r\n                <Table columns={columns} dataSource={dataTeacher}/>\r\n            </Card>\r\n\r\n            {item &&\r\n                <ModalUpdateTeacher item={item} setItem={setItem} showModal={showModal} setShowModal={setShowModal}/>}\r\n\r\n            {assignment && <ModalAssignments showModalAssigment={showModalAssigment} setShowModalAssigment={setShowModalAssigment}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dataTeacher: selectorTeacher.getDataTeachers(state),\r\n    isFetching: selectorTeacher.getFetching(state)\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getTeachers: () => {\r\n        dispatch(actionsTeacher.loadTeachersAll());\r\n    },\r\n    deleteTeacher: (teacher) => {\r\n        dispatch(actionsTeacher.deleteTeachers(teacher));\r\n    },\r\n    saveTeacherSelectedAssignment: (teacher) => {\r\n        dispatch(actionsAssignment.saveTeacherSelectedAssignment(teacher));\r\n    },\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListTeachers)\r\n","import React, {useEffect, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ListTeachers from \"./_components/ListTeachers\";\r\nimport {Card, Radio} from \"antd\";\r\nimport FormTeachers from \"./_components/FormTeacher\";\r\nimport {actions as actionTeachers} from \"store/reducers/teachers\"\r\n\r\nexport const Teachers = ({saveTeachers}) => {\r\n    const [mode, setMode] = useState('registro');\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    const handleModeChange = (e) => {\r\n        setMode(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card title=\"Profesores\" bordered={false} style={{width: \"100%\"}}>\r\n                <Radio.Group\r\n                    onChange={handleModeChange}\r\n                    value={mode}\r\n                    style={{\r\n                        marginBottom: 8,\r\n                    }}\r\n                >\r\n                    <Radio.Button value=\"registro\">Registro</Radio.Button>\r\n                    <Radio.Button value=\"list\">Listado</Radio.Button>\r\n                </Radio.Group>\r\n                {mode === \"registro\" && <FormTeachers submitTeacher={saveTeachers}/>}\r\n                {mode === \"list\" && <ListTeachers/>}\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    saveTeachers: (teacher) => {\r\n        dispatch(actionTeachers.saveTeachers(teacher))\r\n    }\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Teachers)\r\n"],"names":["tailLayout","wrapperCol","offset","span","connect","state","dispatch","item","submitTeacher","setFormSubmitRef","formRef","useRef","useState","componentSize","setComponentSize","indexImgSecurity","setIndexImgSecurity","editPassword","setEditPassword","useEffect","imgSecurity","selectToImgSecurity","ref","labelCol","layout","initialValues","size","onValuesChange","onFinish","values","id","current","resetFields","notification","message","description","icon","CheckCircleOutlined","style","color","CloseCircleOutlined","rules","required","pattern","RegExp","name","label","type","disabled","onClick","setFieldValue","className","width","height","src","alt","htmlType","setItem","setShowModal","updateTeacher","teacher","actionTeachers","showModal","formSubmitRef","title","open","okText","onOk","submit","onCancel","cancelText","loading","FormTeacher","dataCourseWithAssignments","selectorAssignment","dataAllSubjects","dataSelectedSubjects","teacherSelectedAssignment","courseSelectedAssignment","isFetching","isFetchingSubjects","getCoursesWithAssignments","userId","actionsAssignment","getAllSubjects","getSelectedSubjects","courseId","saveAssignmentSubject","subjectId","idAssignment","saveAssignmentCourse","deleteAssignmentSubject","deleteAssignmentCourse","saveTeacherSelectedAssignment","saveCourseSelectedAssignment","course","showModalAssigment","setShowModalAssigment","showMessage","alertConfirm","setAlertConfirm","columns","dataIndex","key","render","text","record","assignmentCourse","placement","onConfirm","confirmDeleteAssignment","selectingCourse","timer","setTimeout","hideAuthMessage","clearTimeout","hideModal","initial","opacity","marginBottom","animate","showIcon","dataSource","parallel","mode","placeholder","value","onSelect","currentSubject","find","onDeselect","options","dataTeacher","selectorTeacher","getTeachers","actionsTeacher","deleteTeacher","assignment","setAssignment","actionsMenuTeacher","loadTeacher","loadTeacherAssignment","danger","confirmDeleteTeacher","estado","menu","items","e","preventDefault","MoreOutlined","Number","Teachers","saveTeachers","setMode","bordered","onChange","target"],"sourceRoot":""}